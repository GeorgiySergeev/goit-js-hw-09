{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAmBC,SAASC,cAAc,2BAC1CC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAgBJ,SAASC,cAAc,wBAE7C,SAASI,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAAKC,GAChCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAI,CAAEH,WAAUC,UAEhBG,EAAI,CAAEJ,WAAUC,S,GAEjBA,E,IAOPR,EAAiBe,iBAAiB,SAElC,SAA4BC,GAC1BA,EAAEC,iBACFC,QAAQC,IAAId,EAAce,OAM1B,IALA,IAAMC,EAAaC,OAAOnB,EAAWiB,OAC/BG,EAAOD,OAAOlB,EAAUgB,OAIrBI,EAAI,EAAGA,EAAInB,EAAce,MAAOI,GAAI,EAC3ClB,EAAc,EAAIkB,EAAGH,EAAaG,EAAID,GACnCE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAuCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst createPromiseBtn = document.querySelector('button[type = \"submit\"]');\nconst delayValue = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst promiseAmount = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\n//console.log(createPromise(2, 1500))\n\ncreatePromiseBtn.addEventListener('click', onClickPromicseBtn);\n\nfunction onClickPromicseBtn(e) {\n  e.preventDefault();\n  console.log(promiseAmount.value);\n  const firstDelay = Number(delayValue.value);\n  const step = Number(delayStep.value);\n\n  //const delay = firstDelay * step;\n\n  for (let i = 0; i < promiseAmount.value; i +=1) {\n    createPromise(1 + i, firstDelay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  //  const inputDlay = e.target\n\n  // createPromise()\n  // .then(({ position, delay }) => {\n  //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(({ position, delay }) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromiseBtn","document","querySelector","$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$promiseAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","addEventListener","e","preventDefault","console","log","value","firstDelay","Number","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ad5a99a0.js.map"}